setwd("C:\Users\himank\Documents\R\COURSERA DS\5.Reproducible research\RepData_PeerAssessment1-master\activity")
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
activity<-read.csv("activity.csv")
library(dplyr)
activity<-tbl_df(activity)
str(activity)
length(activity$step)
length(activity$steps)
length(activity$steps)
length(activity$steps,rm.na=TRUE)
length(activity$steps,na.rm=TRUE)
length(activity$steps)
?tapply
tapply(activity$steps,activity$date,sum)
tapply(activity$steps,activity$date,sum,na.rm=TRUE)
length(tapply(activity$steps,activity$date,sum,na.rm=TRUE))
length(activity$date)
head(activity(date))
head(activity$date)
str(activity$date)
tapply(activity$steps,activity$date,sum,na.rm=TRUE)
mean(tapply(activity$steps,activity$date,sum,na.rm=TRUE))
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps)
mean(totalsteps)
median(totalsteps)
abline(v=mean(totalsteps))
abline(v=mean(totalsteps),lwd=3)
abline(v=mean(totalsteps),lwd=3,col="blue")
abline(v=mean(totalsteps),lwd=3,col="blue",lab="df")
?xlab
legend("df")
?legend
legend(25000,25,col="blue","mean")
legend(20000,25,col="blue","mean")
legend(10000,25,col="blue","mean")
legend(15000,25,col="blue","mean")
legend(17000,25,col="blue","mean")
hist(totalsteps)
abline(v=mean(totalsteps),lwd=3,col="blue")
legend(17000,25,col="blue","mean")
legend(17000,25,col="blue","mean",pch="l")
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l")
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col="blue")
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
hist(totalsteps)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
hist(totalsteps,col="purple" )
hist(totalsteps,col="cyan" )
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
tapply(activity$steps,activity$date,mean)
tapply(activity$steps,activity$date,mean,na.rm=TRUE)
totalsteps
tapply(activity$steps,activity$date,mean,na.rm=TRUE)
tapply(activity$steps,activity$date,sum,na.rm=TRUE)
tapply(activity$steps,activity$date,sum/length,na.rm=TRUE)
tapply(activity$steps,activity$date,mean,na.rm=TRUE)
meansteps<-tapply(activity$steps,activity$date,mean,na.rm=TRUE)
with(activity)%>% plot(interval,meansteps,time="l")
with(activity)%>% plot(interval,meansteps,type="l")
with(activity)%>% plot(interval,totalsteps,type="l")
plot(activity$interval,meansteps,type="l")
str(activity)
length(meansteps)
length(activity$)
length(activity$interval)
length(meansteps)
meansteps<-tapply(activity$steps,activity$interval,na.rm=TRUE)
plot(activity$interval,meansteps,type="l")
aggregate(activity$steps,by=activity$interval,mean,na.rm=TRUE)
aggregate(activity$steps,by=list(activity$interval),mean,na.rm=TRUE)
meansteps
meansteps<-tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
meansteps
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
meansteps
aggregate(activity$steps,by=list(activity$interval),mean,na.rm=TRUE)
plot(activity$interval,meansteps,type="l")
meansteps
length(meansteps)
plot(activity$interval,meansteps,type="l")
ggplot(aes(activity$interval,meansteps))+geom_lines()
library(ggplot2)
library(ggplot2)
ggplot(aes(activity$interval,meansteps))+geom_lines()
ggplot(activity,aes(activity$interval,meansteps))+geom_lines()
ggplot(activity,aes(activity$interval,meansteps))+geom_line()
hist(totalsteps,col="cyan" )
hist(totalsteps,col="cyan" ,binwidth="100")
?hist
hist(totalsteps,col="cyan",breaks=100)
hist(totalsteps,col="cyan",breaks=30)
length(meansteps)
length(activity$interval)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean)
length(meansteps)
meansteps <- aggregate(steps ~ interval, data=activity, FUN="mean", na.exclude=T)
meansteps
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l")
plot(unique(activity$interval),meansteps,type="l",col="purple")
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
max(meansteps)
which(max(meansteps))
max(meansteps)
which(meansteps==max(meansteps))
unique(activity$interval)$which(meansteps==max(meansteps))
unique(activity$interval)[which(meansteps==max(meansteps))]
unique(activity$interval)[which.max(meansteps)]
missing <- is.na(data$steps)
# How many missing
table(missing)
missing <- is.na(data$steps)
missing <- is.na(activiry$steps)
missing <- is.na(activity$steps)
# How many missing
table(missing)
sum(missing)
activity$steps
activity$
activity
activity
activity$steps
length(activity$steps)
tapply(activity$steps,INDEX = activity$interval,mean,na.rm=TRUE)
mean_per_interval<-tapply(activity$steps,INDEX = activity$interval,mean,na.rm=TRUE)
mean_per_interval<-aggregate(activity$steps,INDEX =list(activity$interval),mean,na.rm=TRUE)
mean_per_interval<-aggregate(activity$steps,INDEX =list(activity$interval),FUN=mean,na.rm=TRUE)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
mean_per_interval
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
for(i in 1:17586){
if(is.na(activity$steps[i])){
activity$interval[i]<-mean_per_interval$x[i]
}
}
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$interval[i]<-mean_per_interval$x[i]
}
}
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
library(dplyr)
activity<-read.csv("activity.csv")
activity<-tbl_df(activity)
str(activity)
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps,col="cyan",breaks=30)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
unique(activity$interval)[which.max(meansteps)]
sum(is.na(activity$steps))
sum(missing)
length(activity$steps)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$interval[i]<-mean_per_interval$x[i]
}
}
is.na(activity$steps)
any(is.na(activity$steps))
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
library(dplyr)
activity<-read.csv("activity.csv")
activity<-tbl_df(activity)
str(activity)
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps,col="cyan",breaks=30)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
unique(activity$interval)[which.max(meansteps)]
sum(is.na(activity$steps))
sum(missing)
length(activity$steps)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$steps[i]<-mean_per_interval$x[i]
}
any(is.na(activity$steps))
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$steps[i]<-mean_per_interval$x[i]
}
}
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
library(dplyr)
activity<-read.csv("activity.csv")
activity<-tbl_df(activity)
str(activity)
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps,col="cyan",breaks=30)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
unique(activity$interval)[which.max(meansteps)]
sum(is.na(activity$steps))
sum(missing)
length(activity$steps)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$steps[i]<-mean_per_interval$x[i]
}
}
any(is.na(activity$steps))
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
library(dplyr)
activity<-read.csv("activity.csv")
activity<-tbl_df(activity)
str(activity)
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps,col="cyan",breaks=30)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
unique(activity$interval)[which.max(meansteps)]
sum(is.na(activity$steps))
sum(missing)
length(activity$steps)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$steps[i]<-mean_per_interval$x[i]
}
}
f
f
12
df
E
23
1
2
13=
promg
LJ2
3
}
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
library(dplyr)
activity<-read.csv("activity.csv")
activity<-tbl_df(activity)
str(activity)
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps,col="cyan",breaks=30)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
unique(activity$interval)[which.max(meansteps)]
sum(is.na(activity$steps))
sum(missing)
length(activity$steps)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$steps[i]<-mean_per_interval$x[i]
}
}
any(is.na(activity$steps))
activity$steps
any(is.na(activity$steps))
is.na(activity$steps)
any(is.na(activity$steps))
mean_per_interval
sum(is.na(activity$steps))
sum(is.na(activity$steps))
sum(is.na(activity$steps))
sum(is.na(activity$steps))
sum(is.na(activity$steps))
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$steps[i]<-mean_per_interval$x[i]
}
}
activity<-read.csv("activity.csv")
length(activity)
nrow(activity)
length(activity$steps)
mean_per_interval<-aggregate(steps=activity$steps,by =list(interval=activity$interval),FUN=mean,na.rm=TRUE)
mean_per_interval<-aggregate(steps=activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
names(mean_per_interval)<-c("interval","mean")
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
library(dplyr)
activity<-read.csv("activity.csv")
activity<-tbl_df(activity)
str(activity)
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps,col="cyan",breaks=30)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
unique(activity$interval)[which.max(meansteps)]
sum(is.na(activity$steps))
sum(missing)
length(activity$steps)
mean_per_interval<-aggregate(activity$steps,by =list(activity$interval),FUN=mean,na.rm=TRUE)
names(mean_per_interval)<-c("interval","mean")
for(i in 1:17568){
if(is.na(activity$steps[i])){
activity$steps[i]<-mean_per_interval$mean[mean_per_interval$interval==activity$interval[i]]
}
}
sum(is.na(activity$steps))
activity$steps
str(activity$steps)
any(is.na(activity$steps))
sum(is.na(activity$steps))
nonaactivity<-activity
setwd("C:\\Users\\himank\\Documents\\R\\COURSERA DS\\5.Reproducible research\\RepData_PeerAssessment1-master\\activity")
library(dplyr)
activity<-read.csv("activity.csv")
activity<-tbl_df(activity)
str(activity)
totalsteps<-tapply(activity$steps,activity$date,sum,na.rm=TRUE)
hist(totalsteps,col="cyan",breaks=30)
abline(v=c(mean(totalsteps),median(totalsteps)),lwd=3,col=c("blue","red"))
legend(17000,25,col=c("blue","red"),c("mean","median"),pch=c("l","l"))
mean(totalsteps)
median(totalsteps)
str(activity)
meansteps<-tapply(activity$steps,INDEX =  activity$interval,mean,na.rm=TRUE)
plot(unique(activity$interval),meansteps,type="l",col="purple",xlab="interval",ylab="avg steps per day")
unique(activity$interval)[which.max(meansteps)]
sum(is.na(activity$steps))
nonaactivity<-activity
mean_per_interval<-aggregate(nonaactivity$steps,by =list(nonaactivity$interval),FUN=mean,na.rm=TRUE)
names(mean_per_interval)<-c("interval","mean")
for(i in 1:17568){
if(is.na(nonaactivity$steps[i])){
nonaactivity$steps[i]<-mean_per_interval$mean[mean_per_interval$interval==nonaactivity$interval[i]]
}
}
any(is.na(nonaactivity$steps))
any(is.na(activity$steps))
sum(is.na(activity$steps))
nonaactivity$date
unique(nonaactivity$date)
aggregate(nonaactivity$steps,by=list(nonaactivity$date),FUN=sum)
stepsperday<-aggregate(nonaactivity$steps,by=list(nonaactivity$date),FUN=sum)
hist(stepsperday$x)
hist(stepsperday$x,xlab="stepsperday")
hist(stepsperday$x,xlab="stepsperday",col="green")
mean(stepsperday$x)
median(stepsperday$x)
mean(totalsteps)
median(totalsteps)
weekdays(nonaactivity$date)
head(nonaactivity$date)
weekdays(nonaactivity$date)
as.Date(nonaactivity$date)
weekdays(as.Date(nonaactivity$date))
day<-weekdays(as.Date(nonaactivity$date))
length(day)
nonaactivity$day<-as.factor(day)
nonaactivity$day
nonaactivity[c("day")]
nonaactivity[-c("day")]
nonaactivity[-c("day")]
nonaactivity[c("day")]
nonaactivity[-c("day","date")]
nonaactivity
nonaactivity[,1:3]
day<-weekdays(as.Date(nonaactivity$date))
day
as.factor(day)
levels(day)<-c("weekday","weekend")
day
labels(day)<-c("weekday","weekend")
nonaactivity$day<-"weekday"
nonaactivity$day[day=="Saturday"|day=="Sunday"]<-"weekend"
nonaactivity$day
as.factor(nonaactivity$day)
as.factor(nonaactivity$day)
as.factor(nonaactivity$day)[weekend]
as.factor(nonaactivity$day)[weekday]
as.factor(nonaactivity$day)[nonaactivity$day=="weekend"]
as.factor(nonaactivity$day)[nonaactivity$day=="weekend"]
table(nonaactivity$day)
table(nonaactivity$day)
aggregate(nonaactivity$steps,by=list(nonaactivity$day),FUN=mean)
nonaactivity$days<-day
nonaactivity
averages <- aggregate(steps ~ interval + day, data=nonaactivity, mean)
averages
ggplot(averages,aes(interval,steps))
ggplot(averages,aes(interval,steps))+geom_line()
ggplot(averages,aes(interval,steps))+geom_line()+facet_grid(day~ .)
averages <- aggregate(steps ~ interval, data=nonaactivity, mean)
ggplot(averages,aes(interval,steps))+geom_line()+facet_grid(day~ .)
averages <- aggregate(steps ~ interval+day, data=nonaactivity, mean)
ggplot(averages,aes(interval,steps))+geom_line()+facet_grid(day~ .)
ggplot(averages,aes(interval,steps))+geom_line(col=c("blue","red"))+facet_grid(day~ .)
averages <- aggregate(steps ~ interval+day, data=nonaactivity, mean)
ggplot(averages,aes(interval,steps))+geom_line(col=c("blue","red"))+facet_grid(day~ .)
averages <- aggregate(steps ~ interval+day, data=nonaactivity, mean)
ggplot(averages,aes(interval,steps))+geom_line(col="blue")+facet_grid(day~ .)
ggplot(averages,aes(interval,steps),col=c("blue","red"))+geom_line()+facet_grid(day~ .)
ggplot(averages,aes(interval,steps))+geom_line("Blue")+facet_grid(day~ .)
ggplot(averages,aes(interval,steps))+geom_line(col="Blue")+facet_grid(day~ .)
ggplot(averages,aes(interval,steps))+geom_line(col="Blue")+facet_grid(day~ .,cols = c("blue","red"))
ggplot(averages,aes(interval,steps))+geom_line()+facet_grid(day~ .,cols = c("blue","red"))
ggplot(averages,aes(interval,steps))+geom_line(col="purple")+facet_grid(day~ .)
